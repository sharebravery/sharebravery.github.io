import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-BF0Svkju.js";const p={},o=t(`<pre><code>业务需要，做了个前端导出，使用了XLSX，由于有部分数据长度不固定，所以合并范围需要动态计算。
后面需要调整样式，发现 XLSX 开源版本不支持，切换到国产 ExcelJS，并基于此封装了一个工具类
ExcelJSuu, 封装简化了插件提供的函数，并可以根据页面渲染所需的相同树形数据结构直接
计算出合并范围，最后封装完整后只需要直接传入表头和表格数据即可。
</code></pre><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 *
 * <span class="token keyword">@param</span> <span class="token parameter">queryHeader</span> 第一排表头数组
 */</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">exportTable</span><span class="token punctuation">(</span>queryHeader <span class="token operator">=</span> tableHeader1<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> header1 <span class="token operator">=</span> queryHeader <span class="token operator">??</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;学校&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;考试&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;考试时间&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;年级&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;班级&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;科目&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;考试总分&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> header2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;学号&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;班级&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> dynamic <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;分数&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;联考排名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;学校排名&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;班级排名&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> headers<span class="token operator">:</span> <span class="token punctuation">[</span>
    headerRow1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    headerRow2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    headerRow2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>header2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>header2<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>headerRow1<span class="token punctuation">,</span> headerRow2<span class="token punctuation">,</span> headerRow3<span class="token punctuation">]</span> <span class="token operator">=</span> headers<span class="token punctuation">;</span>

  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>showScoreParams<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  params<span class="token punctuation">.</span>limit <span class="token operator">=</span> <span class="token number">100000000</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> items <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>Internal<span class="token punctuation">.</span>ScoreAnalysis<span class="token punctuation">.</span><span class="token function">GetScoreRanking_PostAsync</span><span class="token punctuation">(</span>
    params<span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>items<span class="token operator">?.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstItem<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">;</span>

  firstItem<span class="token punctuation">.</span>scoreDetail
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>subjectName<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>subjectName<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      headerRow2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span>subjectName<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>dynamic<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> interval <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>headerRow2<span class="token punctuation">.</span>length <span class="token operator">/</span> header1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 间隔</span>

  header1<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// pre.push(...[cur, ...new Array(interval)]);</span>
    headerRow1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span>cur<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> firstItem<span class="token punctuation">.</span>scoreDetail<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    headerRow3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>dynamic<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> sheet <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      studentName<span class="token punctuation">,</span>
      internalStudentNumber<span class="token punctuation">,</span>
      schoolName<span class="token punctuation">,</span>
      className<span class="token punctuation">,</span>
      examName<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span>info<span class="token punctuation">;</span>

    <span class="token keyword">const</span> row<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
      internalStudentNumber<span class="token punctuation">,</span>
      studentName<span class="token punctuation">,</span>
      className<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    cur<span class="token punctuation">.</span>scoreDetail<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> subjectName<span class="token punctuation">,</span> score<span class="token punctuation">,</span> unionExamRanking<span class="token punctuation">,</span> ranking<span class="token punctuation">,</span> classRanking <span class="token punctuation">}</span> <span class="token operator">=</span>
        item<span class="token punctuation">;</span>

      row<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span>score<span class="token punctuation">,</span> unionExamRanking<span class="token punctuation">,</span> ranking<span class="token punctuation">,</span> classRanking<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  sheet<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token operator">...</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> ws <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">aoa_to_sheet</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * 构造固定列，无定数列表头所合并行列坐标范围
   */</span>
  <span class="token keyword">const</span> headerRow1MG <span class="token operator">=</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> headerRow1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>num<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token punctuation">(</span>interval <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          s<span class="token operator">:</span> <span class="token punctuation">{</span> c<span class="token operator">:</span> num<span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          e<span class="token operator">:</span> <span class="token punctuation">{</span> c<span class="token operator">:</span> num <span class="token operator">+</span> interval<span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> headerRow2MG <span class="token operator">=</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> header2<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    s<span class="token operator">:</span> <span class="token punctuation">{</span> c<span class="token operator">:</span> num<span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    e<span class="token operator">:</span> <span class="token punctuation">{</span> c<span class="token operator">:</span> num<span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> headerRow2DynamicMG <span class="token operator">=</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span>
    header2<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    headerRow2<span class="token punctuation">.</span>length
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> dynamic<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        s<span class="token operator">:</span> <span class="token punctuation">{</span> c<span class="token operator">:</span> num<span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        e<span class="token operator">:</span> <span class="token punctuation">{</span> c<span class="token operator">:</span> num <span class="token operator">+</span> dynamic<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  ws<span class="token punctuation">[</span><span class="token string">&quot;!merges&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span>headerRow1MG<span class="token punctuation">,</span>
    <span class="token operator">...</span>headerRow2MG<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>headerRow2DynamicMG<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  ws<span class="token punctuation">[</span><span class="token string">&quot;!cols&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> headerRow3<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> wpx<span class="token operator">:</span> <span class="token number">120</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">[</span><span class="token string">&quot;!rows&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> headerRow3<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> hpx<span class="token operator">:</span> <span class="token number">32</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> wb <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">book_new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  utils<span class="token punctuation">.</span><span class="token function">book_append_sheet</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> <span class="token string">&quot;显示成绩&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">writeFile</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> <span class="token string">&quot;学生成绩信息.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","mergeXLSX.html.vue"]]),d=JSON.parse('{"path":"/front-end/mergeXLSX.html","title":"前端表格导出合并一（XLSX）","lang":"zh-CN","frontmatter":{"title":"前端表格导出合并一（XLSX）","date":"2022-10-22T00:00:00.000Z","tag":["excel","ts"],"categories":["vue"]},"headers":[],"git":{"createdTime":1666433633000,"updatedTime":1680161427000,"contributors":[{"name":"sharebravery","email":"sharebavery@gmail.com","commits":6}]},"readingTime":{"minutes":1.61,"words":482},"filePathRelative":"front-end/mergeXLSX.md","localizedDate":"2022年10月22日","excerpt":""}');export{r as comp,d as data};
