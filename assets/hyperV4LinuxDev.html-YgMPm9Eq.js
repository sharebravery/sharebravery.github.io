import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,b as s}from"./app-DWQcF8C0.js";const i={},l=s(`<h1 id="使用-hyper-v-进行高效嵌入式-linux-开发" tabindex="-1"><a class="header-anchor" href="#使用-hyper-v-进行高效嵌入式-linux-开发"><span>使用 Hyper-V 进行高效嵌入式 Linux 开发</span></a></h1><p>在进行嵌入式开发时，通常需要在 Windows 上安装虚拟机软件。常用的有 VMware，但如果主要进行软件层面的开发，我建议使用 Windows 自带的 Hyper-V 进行虚拟化管理。这不仅使用方便，无需安装第三方软件，而且体验极佳，几乎是原生体验。</p><h2 id="_1-开启-hyper-v-服务" tabindex="-1"><a class="header-anchor" href="#_1-开启-hyper-v-服务"><span>1. 开启 Hyper-V 服务</span></a></h2><h3 id="_1-1-打开控制面板-启用以下服务后重启电脑" tabindex="-1"><a class="header-anchor" href="#_1-1-打开控制面板-启用以下服务后重启电脑"><span>1.1 打开控制面板，启用以下服务后重启电脑</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623224944.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果你也想使用 WSL，可以同时开启 Windows Subsystem for Linux。</p><h2 id="_2-创建虚拟机" tabindex="-1"><a class="header-anchor" href="#_2-创建虚拟机"><span>2. 创建虚拟机</span></a></h2><p>按下 <code>Win + S</code> 快捷键，搜索 Hyper-V Manager。如果你前面开启了 Hyper-V 服务，就能找到它。</p><h3 id="_2-1-点击快速创建" tabindex="-1"><a class="header-anchor" href="#_2-1-点击快速创建"><span>2.1 点击快速创建</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623225412.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-2-选择所需的操作系统" tabindex="-1"><a class="header-anchor" href="#_2-2-选择所需的操作系统"><span>2.2 选择所需的操作系统</span></a></h3><p>然后按提示一步步进行。我这里选择了 Ubuntu，最好使用需要密码登录的选项，不要选自动登录，否则可能会无法进入系统。</p><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623225600.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-虚拟机扩容" tabindex="-1"><a class="header-anchor" href="#_3-虚拟机扩容"><span>3. 虚拟机扩容</span></a></h2><p>由于快速创建的虚拟机默认存储空间较小，所以需要进行扩容</p><h3 id="_3-1-创建完成后-点击设置虚拟机" tabindex="-1"><a class="header-anchor" href="#_3-1-创建完成后-点击设置虚拟机"><span>3.1 创建完成后，点击设置虚拟机</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623230214.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-在后续的编辑页面中更改为自己想要的大小-例如-40gb" tabindex="-1"><a class="header-anchor" href="#_3-2-在后续的编辑页面中更改为自己想要的大小-例如-40gb"><span>3.2 在后续的编辑页面中更改为自己想要的大小，例如 40GB</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623230419.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-3-在-ubuntu-中扩展刚才的空间" tabindex="-1"><a class="header-anchor" href="#_3-3-在-ubuntu-中扩展刚才的空间"><span>3.3 在 Ubuntu 中扩展刚才的空间</span></a></h3><p>安装 <code>gparted</code> 工具：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">gparted</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装好后，打开 <code>gparted</code> 的 GUI 页面。会有弹窗，点击 <code>Fix</code> 按钮，然后耐心等待光标转圈，不要急于操作。</p><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623231330.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>未分配的空间是你刚才在虚拟机设置中新增的未使用空间。</p><p>在你要扩展的分区（例如 <code>desktop-rootfs</code>）上右键，点击 <code>Resize/Move</code>，然后选择扩展大小即可。完成后点击提交。</p><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623232435.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看结果：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">df</span> <span class="token parameter variable">-h</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-开启-ssh-服务" tabindex="-1"><a class="header-anchor" href="#_4-开启-ssh-服务"><span>4. 开启 SSH 服务</span></a></h2><p>系统默认未安装 SSH 服务。</p><ul><li>安装 SSH：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> openssh-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>启动并设置其在系统启动时自动启动：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start <span class="token function">ssh</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看状态：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其他服务：</li></ul><p>安装 <code>net-tools</code> 即可使用 <code>ifconfig</code> 查看 IP 地址：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> net-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装并配置 Git：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&quot;your_email@example.com&quot;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;your_username&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-网络配置" tabindex="-1"><a class="header-anchor" href="#_5-网络配置"><span>5. 网络配置</span></a></h2><p>那么，使用 Hyper-V 创建的虚拟机如何与 Windows 和开发板通讯呢？</p><p>使用 Hyper-V 配网非常简单，初始配置就可以和 Windows 互通，不需要过多配置，只需注意与开发板的通信。</p><h3 id="_5-1-开发板使用-usb-网卡连接到-windows-主机" tabindex="-1"><a class="header-anchor" href="#_5-1-开发板使用-usb-网卡连接到-windows-主机"><span>5.1 开发板使用 USB 网卡连接到 Windows 主机</span></a></h3><p>这是最简单的方法，插上即用：</p><ul><li>Windows 无需配置</li><li>开发板指定一个 IP 地址</li><li>Ubuntu 使用默认网卡即可（我这里自动分配了 172 开头的 IP 地址）</li></ul><h3 id="_5-2-开发板自带-wi-fi-模块" tabindex="-1"><a class="header-anchor" href="#_5-2-开发板自带-wi-fi-模块"><span>5.2 开发板自带 Wi-Fi 模块</span></a></h3><p>如果开发板自带 Wi-Fi 模块，所有设备进行局域网同网段通信：</p><ul><li>Windows 无需配置</li><li>开发板连接到与 Windows 相同的路由器（保证是同网段）</li><li>Ubuntu 切换网卡，操作如下：</li></ul><p>找到 Virtual Switch Manager：</p><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623234033.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择新建虚拟 Switch，选择外部网络：</p><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623234516.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时 Windows、开发板、Ubuntu 都被路由器分配了同网段的 IP 地址，就可以互相通信了。</p><h3 id="_5-3-开发板使用网线连接到-pc-主机" tabindex="-1"><a class="header-anchor" href="#_5-3-开发板使用网线连接到-pc-主机"><span>5.3 开发板使用网线连接到 PC 主机</span></a></h3><ul><li>在 Windows 上为新接入的以太网设备分配同网段的静态 IP 地址：</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/sharebravery/album/20240623235419.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>在开发板上设置同网段的 IP 地址：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span> <span class="token comment"># 查看网口</span>
<span class="token function">ifconfig</span> eth0 <span class="token number">192.168</span>.0.120 <span class="token comment"># 设置和 Windows 配置的静态 IP 同网段的地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Ubuntu 无需配置，我这里使用的是外部网络的网卡，会分配一个 IP。</li></ul><p>经测试，使用这个方法此时 Windows 可以与 Ubuntu 和开发板互通，但开发板不能直接与 Ubuntu 通信，不过这已经足够使用了。</p><p>使用 Hyper-V 创建的虚拟机体验很好，推荐使用。配置好后，可以使用 VS Code 的 SSH Remote 插件连接到 Ubuntu 进行开发，体验更舒适。</p><hr><p><em>END</em></p><hr>`,68),t=[l];function d(r,c){return e(),n("div",null,t)}const u=a(i,[["render",d],["__file","hyperV4LinuxDev.html.vue"]]),h=JSON.parse('{"path":"/linux/hyperV4LinuxDev.html","title":"使用 Hyper-V 进行高效嵌入式 Linux 开发","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 开启 Hyper-V 服务","slug":"_1-开启-hyper-v-服务","link":"#_1-开启-hyper-v-服务","children":[{"level":3,"title":"1.1 打开控制面板，启用以下服务后重启电脑","slug":"_1-1-打开控制面板-启用以下服务后重启电脑","link":"#_1-1-打开控制面板-启用以下服务后重启电脑","children":[]}]},{"level":2,"title":"2. 创建虚拟机","slug":"_2-创建虚拟机","link":"#_2-创建虚拟机","children":[{"level":3,"title":"2.1 点击快速创建","slug":"_2-1-点击快速创建","link":"#_2-1-点击快速创建","children":[]},{"level":3,"title":"2.2 选择所需的操作系统","slug":"_2-2-选择所需的操作系统","link":"#_2-2-选择所需的操作系统","children":[]}]},{"level":2,"title":"3. 虚拟机扩容","slug":"_3-虚拟机扩容","link":"#_3-虚拟机扩容","children":[{"level":3,"title":"3.1 创建完成后，点击设置虚拟机","slug":"_3-1-创建完成后-点击设置虚拟机","link":"#_3-1-创建完成后-点击设置虚拟机","children":[]},{"level":3,"title":"3.2 在后续的编辑页面中更改为自己想要的大小，例如 40GB","slug":"_3-2-在后续的编辑页面中更改为自己想要的大小-例如-40gb","link":"#_3-2-在后续的编辑页面中更改为自己想要的大小-例如-40gb","children":[]},{"level":3,"title":"3.3 在 Ubuntu 中扩展刚才的空间","slug":"_3-3-在-ubuntu-中扩展刚才的空间","link":"#_3-3-在-ubuntu-中扩展刚才的空间","children":[]}]},{"level":2,"title":"4. 开启 SSH 服务","slug":"_4-开启-ssh-服务","link":"#_4-开启-ssh-服务","children":[]},{"level":2,"title":"5. 网络配置","slug":"_5-网络配置","link":"#_5-网络配置","children":[{"level":3,"title":"5.1 开发板使用 USB 网卡连接到 Windows 主机","slug":"_5-1-开发板使用-usb-网卡连接到-windows-主机","link":"#_5-1-开发板使用-usb-网卡连接到-windows-主机","children":[]},{"level":3,"title":"5.2 开发板自带 Wi-Fi 模块","slug":"_5-2-开发板自带-wi-fi-模块","link":"#_5-2-开发板自带-wi-fi-模块","children":[]},{"level":3,"title":"5.3 开发板使用网线连接到 PC 主机","slug":"_5-3-开发板使用网线连接到-pc-主机","link":"#_5-3-开发板使用网线连接到-pc-主机","children":[]}]}],"git":{"createdTime":1719159715000,"updatedTime":1719159715000,"contributors":[{"name":"sharebravery","email":"sharebravery@gmail.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1007},"filePathRelative":"linux/hyperV4LinuxDev.md","localizedDate":"2024年6月23日","excerpt":""}');export{u as comp,h as data};
