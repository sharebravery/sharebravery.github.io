import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DMis5heP.js";const p="/assets/svgG1-2023-03-31_10-15-12-BUu4foML.png",e="/assets/svgG2-2023-03-31_10-30-10-nS6aDzkW.png",o="/assets/svgG3-2023-03-31_10-42-11-BCvX3VNL.png",l={},c=t(`<h1 id="svg-涂鸦组件-可-npm-发布" tabindex="-1"><a class="header-anchor" href="#svg-涂鸦组件-可-npm-发布"><span>SVG 涂鸦组件（可 npm 发布）</span></a></h1><p>我司有一个阅卷系统，涉及到了阅卷打分，需要写一个涂鸦组件，经过 SVG 和 Canvas 的对比使用了 SVG（后续增加需求开发小程序端，由于小程序不支持 svg 画图，使用了 canvas）。</p><h2 id="独立组件配置" tabindex="-1"><a class="header-anchor" href="#独立组件配置"><span>独立组件配置</span></a></h2><p>当时写这个组件的时候考虑到可能会多个项目使用，于是是作为一个可 npm 安装的独立组件来开发的。</p><h3 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json"><span>package.json</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;lib&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/ch2-lib.umd.ts&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/ch2-lib.es.ts&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/types/packages/index.d.ts&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;exports&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;.&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;import&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/ch2-lib.es.ts&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/ch2-lib.umd.ts&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;./lib/style.css&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;import&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/style.css&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/style.css&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vite-config-ts" tabindex="-1"><a class="header-anchor" href="#vite-config-ts"><span>vite.config.ts</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>  build<span class="token operator">:</span> <span class="token punctuation">{</span>
    outDir<span class="token operator">:</span> <span class="token string">&quot;lib&quot;</span><span class="token punctuation">,</span>
    lib<span class="token operator">:</span> <span class="token punctuation">{</span>
      entry<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;src/packages/index.ts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">&quot;Ch2Lib&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">fileName</span><span class="token operator">:</span> <span class="token punctuation">(</span>format<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ch2-lib.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>format<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.ts</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    rollupOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 确保外部化处理那些你不想打包进库的依赖</span>
      external<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@types/node&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      output<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// 在 UMD 构建模式下为这些外部化的依赖提供一个全局变量</span>
        globals<span class="token operator">:</span> <span class="token punctuation">{</span>
          vue<span class="token operator">:</span> <span class="token string">&quot;Vue&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tsconfig-json" tabindex="-1"><a class="header-anchor" href="#tsconfig-json"><span>tsconfig.json</span></a></h3><p>在该文件中加入这两行</p><blockquote><p>&quot;declaration&quot;: true,</p><p>&quot;declarationDir&quot;: &quot;./lib/types&quot;,</p></blockquote><h2 id="本地开发" tabindex="-1"><a class="header-anchor" href="#本地开发"><span>本地开发</span></a></h2><blockquote><p><em>本项目运行</em> <em><code>yarn link </code></em></p><p>使用项目运行* <em><code>yarn link your project name</code></em></p></blockquote><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><figure><img src="`+p+`" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure><h2 id="几个画图、解析数据的函数" tabindex="-1"><a class="header-anchor" href="#几个画图、解析数据的函数"><span>几个画图、解析数据的函数</span></a></h2><h3 id="createelement" tabindex="-1"><a class="header-anchor" href="#createelement"><span>createElement</span></a></h3><p>注意创建 SVG 元素需要使用 createElementNS</p><p><code>document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, name); </code></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>export default function createElement&lt;K extends keyof SVGElementTagNameMap&gt;(
  name: K,
  brush?: Partial&lt;Brush&gt;
): SVGElementTagNameMap[K] {
  const el = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, name);

  el.setAttribute(&quot;fill&quot;, brush?.fill ?? &quot;transparent&quot;);

  if (brush?.color) el.setAttribute(&quot;stroke&quot;, brush.color);
  if (brush?.size) el.setAttribute(&quot;stroke-width&quot;, brush.size.toString());
  el.setAttribute(&quot;stroke-linecap&quot;, &quot;round&quot;);

  if (brush?.dasharray) el.setAttribute(&quot;stroke-dasharray&quot;, brush!.dasharray);

  return el;
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="drawingtext" tabindex="-1"><a class="header-anchor" href="#drawingtext"><span>drawingText</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">drawingText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">createDrawingTextNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  canvas<span class="token operator">!</span><span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>

  el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  isEdit<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">inputBlur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">displayNodeOnClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      displayNode<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">;</span>

      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">;</span>
      el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> textEl<span class="token operator">:</span> IText <span class="token operator">=</span> <span class="token punctuation">{</span>
      node<span class="token operator">:</span> el<span class="token punctuation">,</span>
      outerHTML<span class="token operator">:</span> el<span class="token punctuation">.</span>outerHTML<span class="token punctuation">,</span>
      mode<span class="token operator">:</span> currentMode<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      left<span class="token operator">:</span> upPoint<span class="token punctuation">.</span>value<span class="token operator">?.</span>x<span class="token operator">!</span><span class="token punctuation">,</span>
      top<span class="token operator">:</span> upPoint<span class="token punctuation">.</span>value<span class="token operator">?.</span>y<span class="token operator">!</span><span class="token punctuation">,</span>
      text<span class="token operator">:</span> el<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> index <span class="token operator">=</span> designData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>node <span class="token operator">===</span> el<span class="token punctuation">)</span><span class="token punctuation">;</span>

    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> displayNode <span class="token operator">=</span> <span class="token function">createTextDisplayNode</span><span class="token punctuation">(</span>
      textEl<span class="token punctuation">,</span>
      defaultOptions<span class="token punctuation">.</span>value<span class="token punctuation">.</span>scale
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    displayNode<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token string">&quot;pointer&quot;</span><span class="token punctuation">;</span>

    displayNode<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> displayNodeOnClick<span class="token punctuation">)</span><span class="token punctuation">;</span>

    canvas<span class="token operator">!</span><span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>displayNode<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 将数据添加到数据源</span>

    <span class="token keyword">const</span> displayEl<span class="token operator">:</span> IText <span class="token operator">=</span> <span class="token punctuation">{</span>
      node<span class="token operator">:</span> displayNode<span class="token punctuation">,</span>
      outerHTML<span class="token operator">:</span> displayNode<span class="token punctuation">.</span>outerHTML<span class="token punctuation">,</span>
      mode<span class="token operator">:</span> currentMode<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      left<span class="token operator">:</span> upPoint<span class="token punctuation">.</span>value<span class="token operator">?.</span>x<span class="token operator">!</span><span class="token punctuation">,</span>
      top<span class="token operator">:</span> upPoint<span class="token punctuation">.</span>value<span class="token operator">?.</span>y<span class="token operator">!</span><span class="token punctuation">,</span>
      text<span class="token operator">:</span> el<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      designData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> el<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
      <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;update:designData&quot;</span><span class="token punctuation">,</span> designData<span class="token punctuation">,</span> displayEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> newItem <span class="token operator">=</span> <span class="token function">percentCustomToolPosition</span><span class="token punctuation">(</span>displayEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> temp <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>displayEl<span class="token punctuation">,</span> <span class="token operator">...</span>newItem <span class="token punctuation">}</span><span class="token punctuation">;</span>
        designData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;update:designData&quot;</span><span class="token punctuation">,</span> designData<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 监听焦点离开</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;blur&quot;</span><span class="token punctuation">,</span> inputBlur<span class="token punctuation">)</span><span class="token punctuation">;</span>

  currentTextNode<span class="token punctuation">.</span>value <span class="token operator">=</span> el<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据百分比转换-保持图形比例、位置" tabindex="-1"><a class="header-anchor" href="#数据百分比转换-保持图形比例、位置"><span>数据百分比转换，保持图形比例、位置</span></a></h2><figure><img src="`+e+`" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure><h2 id="template-图片拖动" tabindex="-1"><a class="header-anchor" href="#template-图片拖动"><span>template 图片拖动</span></a></h2><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`background:\${defaultOptions.backgroundColor}\`<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`transform: scale(\${defaultOptions.scale});text-align:\${
        defaultOptions.imgPosition
      };pointer-events:\${defaultOptions.toolbarShow ? &#39;auto&#39; : &#39;none&#39;}\`<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">@mousedown.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onDragMousedown<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bgImg<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bgImgRef<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultOptions.bgImgUrl<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`transform:rotate(\${defaultOptions.rotate}deg );\`<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">@load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgLoad<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>
        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>target<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`transform:rotate(\${defaultOptions.rotate}deg );\`<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        position: fixed;
        bottom: 0;
        display: flex;
        margin: 12px auto;
        justify-content: center;
      <span class="token punctuation">&quot;</span></span></span>
      <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultOptions.toolbarShow<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Actions</span> <span class="token attr-name">:actions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultOptions.actions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@actionChange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>actionChange<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tools</span> <span class="token attr-name">:tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultOptions.tools<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@toolChange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toolChange<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">onDragMousedown</span><span class="token punctuation">(</span>downEvent<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  downEvent<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> clientX<span class="token operator">:</span> startX<span class="token punctuation">,</span> clientY<span class="token operator">:</span> startY <span class="token punctuation">}</span> <span class="token operator">=</span> downEvent<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> offsetLeft<span class="token punctuation">,</span> offsetTop <span class="token punctuation">}</span> <span class="token operator">=</span> target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span>moveEvent<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">,</span> clientY <span class="token punctuation">}</span> <span class="token operator">=</span> moveEvent<span class="token punctuation">;</span>

    <span class="token keyword">const</span> x <span class="token operator">=</span> offsetLeft <span class="token operator">+</span> clientX <span class="token operator">-</span> startX<span class="token punctuation">;</span>
    <span class="token keyword">const</span> y <span class="token operator">=</span> offsetTop <span class="token operator">+</span> clientY <span class="token operator">-</span> startY<span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span>style<span class="token punctuation">[</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span>style<span class="token punctuation">[</span><span class="token string">&quot;top&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> y <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用例" tabindex="-1"><a class="header-anchor" href="#用例"><span>用例</span></a></h2><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> Ch2PaperOfPainter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;ch2-paper-of-painter&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;ch2-paper-of-painter/lib/style.css&quot;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ch2PaperOfPainter</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 700px</span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+'" alt="avatar" tabindex="0" loading="lazy"><figcaption>avatar</figcaption></figure>',30),i=[c];function u(r,k){return s(),a("div",null,i)}const m=n(l,[["render",u],["__file","svgGraffiti.html.vue"]]),b=JSON.parse('{"path":"/front-end/svgGraffiti.html","title":"SVG涂鸦组件（可 npm 发布）","lang":"zh-CN","frontmatter":{"title":"SVG涂鸦组件（可 npm 发布）","date":"2022-06-09T00:00:00.000Z","tag":["SVG","画图","图形"],"categories":["vue","vue组件"]},"headers":[{"level":2,"title":"独立组件配置","slug":"独立组件配置","link":"#独立组件配置","children":[{"level":3,"title":"package.json","slug":"package-json","link":"#package-json","children":[]},{"level":3,"title":"vite.config.ts","slug":"vite-config-ts","link":"#vite-config-ts","children":[]},{"level":3,"title":"tsconfig.json","slug":"tsconfig-json","link":"#tsconfig-json","children":[]}]},{"level":2,"title":"本地开发","slug":"本地开发","link":"#本地开发","children":[]},{"level":2,"title":"项目结构","slug":"项目结构","link":"#项目结构","children":[]},{"level":2,"title":"几个画图、解析数据的函数","slug":"几个画图、解析数据的函数","link":"#几个画图、解析数据的函数","children":[{"level":3,"title":"createElement","slug":"createelement","link":"#createelement","children":[]},{"level":3,"title":"drawingText","slug":"drawingtext","link":"#drawingtext","children":[]}]},{"level":2,"title":"数据百分比转换，保持图形比例、位置","slug":"数据百分比转换-保持图形比例、位置","link":"#数据百分比转换-保持图形比例、位置","children":[]},{"level":2,"title":"template 图片拖动","slug":"template-图片拖动","link":"#template-图片拖动","children":[]},{"level":2,"title":"用例","slug":"用例","link":"#用例","children":[]}],"git":{"createdTime":1680230746000,"updatedTime":1680230746000,"contributors":[{"name":"sharebravery","email":"sharebavery@gmail.com","commits":1}]},"readingTime":{"minutes":2.39,"words":717},"filePathRelative":"front-end/svgGraffiti.md","localizedDate":"2022年6月9日","excerpt":""}');export{m as comp,b as data};
