import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as p,o as t}from"./app-Bj4vvvPo.js";const o={};function e(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h1><p>业务需要需要导出合并多个表格，为此写了这个工具类，简化了 ExcelJS 原有的函数操作，并能够根据数据结构直接合并表头，省去不少针对每个表格定制合并的心力。该工具类 ExcelJSuu 提供了一系列操作 Excel 的方法，包括构建表头、构建 sheet 二维数据结构、构建基本带边框的表格、合并单元格、设置宽高、设置样式等。</p><h2 id="几个比较重要的函数" tabindex="-1"><a class="header-anchor" href="#几个比较重要的函数"><span>几个比较重要的函数</span></a></h2><p>先观察一下 sheetjs !merges 函数合并所需要的数据</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>workSheet<span class="token punctuation">[</span><span class="token string">&#39;!merges&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token punctuation">[</span> <span class="token punctuation">{</span> s<span class="token operator">:</span> <span class="token punctuation">{</span> r<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> e<span class="token operator">:</span> <span class="token punctuation">{</span> r<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ExccelJS 的则是</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// 按开始行，开始列，结束行，结束列合并</span>
worksheet<span class="token punctuation">.</span><span class="token function">mergeCells</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可见他们的原理是差不多的，我们的目标就是要得到这种数据</p><h3 id="_1-calcheaders" tabindex="-1"><a class="header-anchor" href="#_1-calcheaders"><span>1. calcHeaders</span></a></h3><p>该方法用于计算表头，返回一个 Map 对象，其中 key 为表头列，value 为该列的位置信息。这是一个核心的方法，我司使用的 UI 框架是 antdv，此函数根据 UI 所需的数据结构来计算表格合并的行列数据。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IUuColumn</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  children<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>IUuColumn<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">IUuColumnMap</span> <span class="token operator">=</span> Map<span class="token operator">&lt;</span>IUuColumn<span class="token punctuation">,</span> <span class="token punctuation">{</span> top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> right<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token function">calcHeaders</span><span class="token punctuation">(</span>columns<span class="token operator">:</span> IUuColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> IUuColumnMap <span class="token punctuation">{</span>
  <span class="token keyword">let</span> totalCol <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> totalRow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span>IUuColumn<span class="token punctuation">,</span> <span class="token punctuation">{</span> top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> right<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  columns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">inspectTLR</span><span class="token punctuation">(</span>c <span class="token keyword">as</span> IUuColumn<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">inspectBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> m<span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">inspectTLR</span><span class="token punctuation">(</span>column<span class="token operator">:</span> IUuColumn<span class="token punctuation">,</span> childIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> parent<span class="token operator">?</span><span class="token operator">:</span> IUuColumn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> top <span class="token operator">=</span> parent <span class="token operator">?</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&gt;</span> totalRow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      totalRow <span class="token operator">=</span> top<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      top<span class="token punctuation">,</span>
      bottom<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      left<span class="token operator">:</span> childIndex <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">++</span>totalCol <span class="token operator">:</span> totalCol<span class="token punctuation">,</span>
      right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> column<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      column<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">inspectTLR</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">,</span> column<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span>right <span class="token operator">=</span> column<span class="token punctuation">.</span>children <span class="token operator">?</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>right <span class="token operator">:</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">inspectBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>column<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token keyword">of</span> m<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> column<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span>bottom <span class="token operator">=</span> c<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span>bottom <span class="token operator">=</span> totalRow<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-flatcells" tabindex="-1"><a class="header-anchor" href="#_2-flatcells"><span>2. flatCells</span></a></h3><p>该方法用于将表头 Map 对象扁平化成二维数组，方便后续操作。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">flatCells</span><span class="token punctuation">(</span>m<span class="token operator">:</span> IUuColumnMap<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token operator">...</span>m<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> cells <span class="token operator">=</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>bottom <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">[</span>column<span class="token punctuation">,</span> location<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token punctuation">(</span>cells<span class="token punctuation">[</span>location<span class="token punctuation">.</span>top <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>location<span class="token punctuation">.</span>left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> column<span class="token punctuation">.</span>title<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> cells<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-writexlsxfile" tabindex="-1"><a class="header-anchor" href="#_3-writexlsxfile"><span>3.writeXLSXFile</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
   *写入XLSX文件
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Workbook<span class="token punctuation">}</span> workbook
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token keyword">async</span> <span class="token function">writeXLSXFile</span><span class="token punctuation">(</span>workbook<span class="token operator">:</span> Workbook <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>workbook<span class="token punctuation">,</span> filename <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">await</span> workbook<span class="token punctuation">.</span>xlsx<span class="token punctuation">.</span><span class="token function">writeBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>buffer<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;application/octet-stream&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">openDownloadDialog</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 下载对话框
 * <span class="token keyword">@param</span> <span class="token parameter">url</span> 下载地址，也可以是一个blob对象，必选
 * <span class="token keyword">@param</span> <span class="token parameter">saveName</span> 文件名，可选
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">openDownloadDialog</span><span class="token punctuation">(</span>url<span class="token operator">:</span> Blob <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> saveName <span class="token operator">=</span> <span class="token string">&#39;导出文件.xlsx&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> url <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> url <span class="token keyword">instanceof</span> <span class="token class-name">Blob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
  aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> saveName <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> event <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>MouseEvent<span class="token punctuation">)</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    event <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&#39;MouseEvents&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    event<span class="token punctuation">.</span><span class="token function">initMouseEvent</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> window<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  aLink<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-insertbase64image" tabindex="-1"><a class="header-anchor" href="#_4-insertbase64image"><span>4. insertBase64Image</span></a></h3><p>中途还有一个有趣的函数，因为表格中需要插入图表，正好我们用的 antv g2plot 可以提供 base64 的图片形式，所以在构造表格的时候就顺便把图表插进数据源了,在这里判断一下是 base64 的数据的话就调用 ExcelJS 插入图片的函数。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">insertBase64Image</span><span class="token punctuation">(</span>sheetData<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> insertRowCount<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>insertRowCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> sheetData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> item <span class="token operator">=</span> sheetData<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> item<span class="token punctuation">.</span>length<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> v <span class="token operator">=</span> item<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">validateBase64</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> imageId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>workbook<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            base64<span class="token operator">:</span> v<span class="token punctuation">,</span>
            extension<span class="token operator">:</span> <span class="token string">&#39;png&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>imageId<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            tl<span class="token operator">:</span> <span class="token punctuation">{</span> col<span class="token operator">:</span> y<span class="token punctuation">,</span> row<span class="token operator">:</span> x <span class="token operator">+</span> insertRowCount <span class="token punctuation">}</span><span class="token punctuation">,</span>
            ext<span class="token operator">:</span> <span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="完整代码" tabindex="-1"><a class="header-anchor" href="#完整代码"><span>完整代码</span></a></h1><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> rangeArray <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/utils/util&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Fill<span class="token punctuation">,</span> Style<span class="token punctuation">,</span> Workbook<span class="token punctuation">,</span> Worksheet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;exceljs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">IUuTableColumnsType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>IUuColumn <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  children<span class="token operator">:</span> IUuTableColumnsType<span class="token punctuation">;</span>
  dataIndex<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Range</span> <span class="token operator">=</span> <span class="token punctuation">[</span>top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IUuColumn</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  children<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>IUuColumn<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">IUuColumnMap</span> <span class="token operator">=</span> Map<span class="token operator">&lt;</span>
  IUuColumn<span class="token punctuation">,</span>
  <span class="token punctuation">{</span> top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> right<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 下载对话框
 * <span class="token keyword">@param</span> <span class="token parameter">url</span> 下载地址，也可以是一个blob对象，必选
 * <span class="token keyword">@param</span> <span class="token parameter">saveName</span> 文件名，可选
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">openDownloadDialog</span><span class="token punctuation">(</span>
  url<span class="token operator">:</span> Blob <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  saveName <span class="token operator">=</span> <span class="token string">&quot;导出文件.xlsx&quot;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> url <span class="token operator">==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> url <span class="token keyword">instanceof</span> <span class="token class-name">Blob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
  aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> saveName <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> event <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>MouseEvent<span class="token punctuation">)</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    event <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&quot;MouseEvents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    event<span class="token punctuation">.</span><span class="token function">initMouseEvent</span><span class="token punctuation">(</span>
      <span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>
      <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      window<span class="token punctuation">,</span>
      <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token keyword">null</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  aLink<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

validateBase64<span class="token punctuation">.</span>regex <span class="token operator">=</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&amp;&#39;,()*+;=\\-._~:@\\/?%\\s]*?)\\s*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">validateBase64</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> validateBase64<span class="token punctuation">.</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">calcHeaders</span><span class="token punctuation">(</span>columns<span class="token operator">:</span> IUuColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> IUuColumnMap <span class="token punctuation">{</span>
  <span class="token keyword">let</span> totalCol <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> totalRow <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span>
    IUuColumn<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> right<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
  <span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  columns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">inspectTLR</span><span class="token punctuation">(</span>c <span class="token keyword">as</span> IUuColumn<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">inspectBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> m<span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">inspectTLR</span><span class="token punctuation">(</span>
    column<span class="token operator">:</span> IUuColumn<span class="token punctuation">,</span>
    childIndex<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    parent<span class="token operator">?</span><span class="token operator">:</span> IUuColumn
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> top <span class="token operator">=</span> parent <span class="token operator">?</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&gt;</span> totalRow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      totalRow <span class="token operator">=</span> top<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      top<span class="token punctuation">,</span>
      bottom<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      left<span class="token operator">:</span> childIndex <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">++</span>totalCol <span class="token operator">:</span> totalCol<span class="token punctuation">,</span>
      right<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> column<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      column<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">inspectTLR</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">,</span> column<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span>right <span class="token operator">=</span> column<span class="token punctuation">.</span>children
      <span class="token operator">?</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>right
      <span class="token operator">:</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">inspectBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>column<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token keyword">of</span> m<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> column<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span>bottom <span class="token operator">=</span> c<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span>bottom <span class="token operator">=</span> totalRow<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">flatCells</span><span class="token punctuation">(</span>m<span class="token operator">:</span> IUuColumnMap<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token operator">...</span>m<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> cells <span class="token operator">=</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>bottom <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">[</span>column<span class="token punctuation">,</span> location<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token punctuation">(</span>cells<span class="token punctuation">[</span>location<span class="token punctuation">.</span>top <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>location<span class="token punctuation">.</span>left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> column<span class="token punctuation">.</span>title<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> cells<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 *扁平化表头
 *
 * <span class="token keyword">@export</span>
 * <span class="token keyword">@template</span> T
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span> columns
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> [flats=[] as T]
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>  <span class="token punctuation">{</span>T<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">flatColumns</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> IUuTableColumnsType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  columns<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  flats <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token constant">T</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  columns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token operator">?.</span>children<span class="token operator">?.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flatColumns</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>children <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> flats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token operator">?.</span>dataIndex <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token operator">?.</span>children<span class="token operator">?.</span>length <span class="token operator">??</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      flats<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> flats<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ExcelJSuu</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> worksheet<span class="token operator">:</span> Worksheet<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  calcHeaders <span class="token operator">=</span> calcHeaders<span class="token punctuation">;</span>

  flatCells <span class="token operator">=</span> flatCells<span class="token punctuation">;</span>

  flatColumns <span class="token operator">=</span> flatColumns<span class="token punctuation">;</span>

  <span class="token keyword">public</span> columnCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> rowCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> headersRowCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> insertRowCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">get</span> <span class="token function">tableRowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>headersRowCount <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rowCount<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *根据间隔构造排及其合并数据
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string[]<span class="token punctuation">}</span> row
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> interval
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>  <span class="token punctuation">{</span><span class="token punctuation">{</span> row: string[][]; merges: Range[] <span class="token punctuation">}</span><span class="token punctuation">}</span>
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">buildRowAndMergesByInterval</span><span class="token punctuation">(</span>
    row<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    interval<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> row<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> merges<span class="token operator">:</span> Range<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newRow <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>pre<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> row<span class="token punctuation">.</span>length <span class="token operator">*</span> interval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span>cur<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> merges <span class="token operator">=</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> newRow<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token punctuation">(</span>interval <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> num<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> num <span class="token operator">+</span> interval<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Range<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      row<span class="token operator">:</span> newRow<span class="token punctuation">,</span>
      merges<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *构建表头
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IUuColumn[]<span class="token punctuation">}</span> columns
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>  <span class="token punctuation">{</span>string[][]<span class="token punctuation">}</span>
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">buildHeadersAndMerges</span><span class="token punctuation">(</span>columns<span class="token operator">:</span> IUuColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    headers<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    merges<span class="token operator">:</span> Range<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token function">calcHeaders</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> mgs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token operator">...</span>m<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>top<span class="token punctuation">,</span> e<span class="token punctuation">.</span>left<span class="token punctuation">,</span> e<span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> e<span class="token punctuation">.</span>right<span class="token punctuation">]</span> <span class="token keyword">as</span> Range
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> headers <span class="token operator">=</span> <span class="token function">flatCells</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      headers<span class="token punctuation">,</span>
      merges<span class="token operator">:</span> mgs<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *构建sheet二维数据结构
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IUuTableColumnsType<span class="token punctuation">}</span> flatColumns
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any[]<span class="token punctuation">}</span> tableData
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>  <span class="token punctuation">{</span>string[][]<span class="token punctuation">}</span>
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">buildSheet</span><span class="token punctuation">(</span>columns<span class="token operator">:</span> IUuTableColumnsType<span class="token punctuation">,</span> tableData<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> flats <span class="token operator">=</span> <span class="token function">flatColumns</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>columnCount <span class="token operator">=</span> flats<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token keyword">const</span> sheet <span class="token operator">=</span> tableData<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

      flats<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">[</span>column<span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> sheet<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *根据数据构建基本带边框的表格
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IUuTableColumnsType<span class="token punctuation">}</span> columns
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any[]<span class="token punctuation">}</span> tableData
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>  <span class="token punctuation">{</span>string[][]<span class="token punctuation">}</span>
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">buildBaseSheet</span><span class="token punctuation">(</span>
    columns<span class="token operator">:</span> IUuTableColumnsType<span class="token punctuation">,</span>
    tableData<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    autoMerge <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    insertRowCount <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> headersAndMgs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildHeadersAndMerges</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> sheet <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildSheet</span><span class="token punctuation">(</span>columns<span class="token punctuation">,</span> tableData<span class="token punctuation">)</span><span class="token punctuation">;</span>

    sheet<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token operator">...</span>headersAndMgs<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">addRows</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>

    autoMerge <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">merges</span><span class="token punctuation">(</span>headersAndMgs<span class="token punctuation">.</span>merges<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setWidthByColumns</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultStyleByColumn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>columnCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertBase64Image</span><span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> insertRowCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>rowCount <span class="token operator">=</span> sheet<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>headersRowCount <span class="token operator">=</span> headersAndMgs<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token keyword">return</span> sheet<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *合并单元格
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>MergeCells<span class="token punctuation">}</span> v
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">merges</span><span class="token punctuation">(</span>
    v<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    v<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">mergeCells</span><span class="token punctuation">(</span>
        item <span class="token keyword">as</span> <span class="token punctuation">[</span>top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *根据columns的width属性调整表格宽度
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IUuTableColumnsType<span class="token punctuation">}</span> columns
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">setWidthByColumns</span><span class="token punctuation">(</span>columns<span class="token operator">:</span> IUuTableColumnsType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> flats <span class="token operator">=</span> <span class="token function">flatColumns</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">;</span>
    flats<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getColumn</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width <span class="token operator">=</span> column<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *设置表头的填充和冻结
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> [argb=&#39;ffc2f8ed&#39;]
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">setColumnsFillAndFreeze</span><span class="token punctuation">(</span>
    range<span class="token operator">:</span> Range <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>headersRowCount<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>columnCount<span class="token punctuation">]</span><span class="token punctuation">,</span>
    argb <span class="token operator">=</span> <span class="token string">&quot;ffc2f8ed&quot;</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>views <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> state<span class="token operator">:</span> <span class="token string">&quot;frozen&quot;</span><span class="token punctuation">,</span> xSplit<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> ySplit<span class="token operator">:</span> range<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFillByRange</span><span class="token punctuation">(</span><span class="token operator">...</span>range<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&quot;pattern&quot;</span><span class="token punctuation">,</span>
      pattern<span class="token operator">:</span> <span class="token string">&quot;solid&quot;</span><span class="token punctuation">,</span>
      fgColor<span class="token operator">:</span> <span class="token punctuation">{</span> argb <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *设置指定范围填充
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> top
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> left
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> bottom
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> right
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Fill<span class="token punctuation">}</span> fill
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">setFillByRange</span><span class="token punctuation">(</span>
    top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    fill<span class="token operator">:</span> Fill
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">rangeArray</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      rows<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span>fill <span class="token operator">=</span> fill<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *设置默认样式 边框 居中
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> start
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> end
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>object<span class="token punctuation">}</span> style
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">setDefaultStyleByColumn</span><span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> style<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Style<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rangeArray</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> column <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getColumn</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

      column<span class="token punctuation">.</span><span class="token function">eachCell</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>cell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cell<span class="token punctuation">.</span>border <span class="token operator">=</span> <span class="token punctuation">{</span>
          top<span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token string">&quot;thin&quot;</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token punctuation">{</span> argb<span class="token operator">:</span> <span class="token string">&quot;ff000000&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          left<span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token string">&quot;thin&quot;</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token punctuation">{</span> argb<span class="token operator">:</span> <span class="token string">&quot;ff000000&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          bottom<span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token string">&quot;thin&quot;</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token punctuation">{</span> argb<span class="token operator">:</span> <span class="token string">&quot;ff000000&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          right<span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token string">&quot;thin&quot;</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token punctuation">{</span> argb<span class="token operator">:</span> <span class="token string">&quot;ff000000&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        cell<span class="token punctuation">.</span>alignment <span class="token operator">=</span> <span class="token punctuation">{</span>
          vertical<span class="token operator">:</span> <span class="token string">&quot;middle&quot;</span><span class="token punctuation">,</span>
          horizontal<span class="token operator">:</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span>
          wrapText<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          cell<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> style<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *设置宽高
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> start
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> end
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> width
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> height
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">setWidthAndHeight</span><span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rangeArray</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> column <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getColumn</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

      column<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>

    rows<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      row<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *获取当前范围的列
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> start
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> end
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">getRangeByColumn</span><span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rangeArray</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> column <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getColumn</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span>column<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *根据列来设置当前范围的样式
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> start
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> end
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>object<span class="token punctuation">}</span> [style]
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token function">setStyleInViewByColumn</span><span class="token punctuation">(</span>
    start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    style<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Style<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token function">rangeArray</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> column <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getColumn</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
      column<span class="token punctuation">.</span><span class="token function">eachCell</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>cell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          cell<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> style<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">insertBase64Image</span><span class="token punctuation">(</span>
    sheetData<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    insertRowCount<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>insertRowCount
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> sheetData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> item <span class="token operator">=</span> sheetData<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> item<span class="token punctuation">.</span>length<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> v <span class="token operator">=</span> item<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">validateBase64</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> imageId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>workbook<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            base64<span class="token operator">:</span> v<span class="token punctuation">,</span>
            extension<span class="token operator">:</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>imageId<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            tl<span class="token operator">:</span> <span class="token punctuation">{</span> col<span class="token operator">:</span> y<span class="token punctuation">,</span> row<span class="token operator">:</span> x <span class="token operator">+</span> insertRowCount <span class="token punctuation">}</span><span class="token punctuation">,</span>
            ext<span class="token operator">:</span> <span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">insertRow</span><span class="token punctuation">(</span>pos<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> style<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span><span class="token function">insertRow</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> value<span class="token punctuation">,</span> style<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>insertRowCount <span class="token operator">+=</span> pos<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *写入XLSX文件
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Workbook<span class="token punctuation">}</span> workbook
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token keyword">async</span> <span class="token function">writeXLSXFile</span><span class="token punctuation">(</span>
    workbook<span class="token operator">:</span> Workbook <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>workbook<span class="token punctuation">,</span>
    filename <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>name
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">await</span> workbook<span class="token punctuation">.</span>xlsx<span class="token punctuation">.</span><span class="token function">writeBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>buffer<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;application/octet-stream&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">openDownloadDialog</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   *将row插入工作簿流 不会破坏原有的结构 并返回新的工作簿
   *
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Workbook<span class="token punctuation">}</span> workbook
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> pos
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any[]<span class="token punctuation">}</span> values
   * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>  <span class="token punctuation">{</span>Promise&lt;Workbook&gt;<span class="token punctuation">}</span>
   * <span class="token keyword">@memberof</span> ExcelJSuu
   */</span>
  <span class="token keyword">async</span> <span class="token function">insertRowWithBuffer</span><span class="token punctuation">(</span>
    workbook<span class="token operator">:</span> Workbook<span class="token punctuation">,</span>
    pos<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    values<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Workbook<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">await</span> workbook<span class="token punctuation">.</span>xlsx<span class="token punctuation">.</span><span class="token function">writeBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> newWb <span class="token operator">=</span> <span class="token keyword">await</span> workbook<span class="token punctuation">.</span>xlsx<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> worksheet <span class="token operator">=</span> newWb<span class="token punctuation">.</span>worksheets<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>worksheet<span class="token punctuation">.</span>name
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>worksheet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;找不到工作表&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    worksheet<span class="token punctuation">.</span><span class="token function">insertRow</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> newWb<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const i=s(o,[["render",e],["__file","excelJSuu.html.vue"]]),k=JSON.parse('{"path":"/front-end/excelJSuu.html","title":"前端表格导出合并三（ExcelJSuu 终版）","lang":"zh-CN","frontmatter":{"title":"前端表格导出合并三（ExcelJSuu 终版）","date":"2022-10-24T00:00:00.000Z","tag":["excel","ts"],"categories":["vue"]},"headers":[{"level":2,"title":"几个比较重要的函数","slug":"几个比较重要的函数","link":"#几个比较重要的函数","children":[{"level":3,"title":"1. calcHeaders","slug":"_1-calcheaders","link":"#_1-calcheaders","children":[]},{"level":3,"title":"2. flatCells","slug":"_2-flatcells","link":"#_2-flatcells","children":[]},{"level":3,"title":"3.writeXLSXFile","slug":"_3-writexlsxfile","link":"#_3-writexlsxfile","children":[]},{"level":3,"title":"4. insertBase64Image","slug":"_4-insertbase64image","link":"#_4-insertbase64image","children":[]}]}],"git":{"createdTime":1680160428000,"updatedTime":1680230746000,"contributors":[{"name":"sharebravery","email":"sharebavery@gmail.com","commits":3}]},"readingTime":{"minutes":6.82,"words":2045},"filePathRelative":"front-end/excelJSuu.md","localizedDate":"2022年10月24日","excerpt":""}');export{i as comp,k as data};
